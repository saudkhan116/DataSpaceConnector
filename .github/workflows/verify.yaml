name: Test Code (Style, Tests)

on:
  push:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # lets run Checkstyle explicitly (as opposed to within gradle) due to better reporting capabilities
      - name: Run Checkstyle
        uses: nikitasavinov/checkstyle-action@0.4.0
        with:
          checkstyle_config: resources/edc-checkstyle-config.xml
          level: error
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tool_name: 'checkstyle'
          checkstyle_version: '9.0'
          reporter: 'github-check'
          filter_mode: 'nofilter'

  Dependency-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Dependency rules report # possible severity values: <'fail'|'warn'|'ignore'>
        run: ./gradlew buildHealth applyDependencyRules -Pdependency.analysis=warn -Pdependency.analysis.clear.artifacts=false

      - name: Dependency analysis report
        run: cat build/reports/dependency-analysis/build-health-report.txt

  Unit-Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Gradle Test Core
        env:
          INTEGRATION_TEST: false
          JACOCO: true
        run: ./gradlew test jacocoTestReport

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/test-results/**/*.xml"

      - name: CodeCov
        uses: codecov/codecov-action@v2

  Sanity-Check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Check basic launcher
        run: |
          ./gradlew :launchers:basic:shadowJar
          echo "Checking Basic Launcher"
          java -jar launchers/basic/build/libs/dataspaceconnector-basic.jar > log.txt &
          sleep 5
          grep "INFO.*edc-.*ready" log.txt
          rm log.txt
          killall java


      - name: Check Sample 01
        run: |
          ./gradlew :samples:01-basic-connector:shadowJar
          echo "Checking Sample 01"
          java -jar samples/01-basic-connector/build/libs/basic-connector.jar > log.txt &
          sleep 5
          grep "INFO.*edc-.*ready" log.txt
          rm log.txt
          killall java


      - name: Check Sample 02
        run: |
          ./gradlew :samples:02-health-endpoint:shadowJar
          echo "Checking Sample 02"
          java -jar samples/02-health-endpoint/build/libs/connector-health.jar > log.txt &
          sleep 5
          grep "INFO.*edc-.*ready" log.txt
          rm log.txt
          killall java

      - name: Check Sample 03
        run: |
          ./gradlew :samples:03-configuration:shadowJar
          echo "Checking Sample 03"
          java -Dedc.fs.config=samples/03-configuration/config.properties -jar samples/03-configuration/build/libs/filsystem-config-connector.jar > log.txt &
          sleep 5
          grep "INFO.*edc-.*ready" log.txt
          rm log.txt
          killall java

      - name: Check Sample 04.0 (Consumer)
        run: |
          ./gradlew :samples:04.0-file-transfer:consumer:shadowJar
          echo "Checking Sample 04 - Consumer"
          java -Dedc.fs.config=samples/04.0-file-transfer/consumer/config.properties -jar samples/04.0-file-transfer/consumer/build/libs/consumer.jar > log.txt &
          sleep 5
          grep "INFO.*edc-.*ready" log.txt
          rm log.txt
          killall java

      - name: Check Sample 04.0 (Provider)
        run: |
          echo "Checking Sample 04 - Provider"
          ./gradlew :samples:04.0-file-transfer:provider:shadowJar
          java -Dedc.fs.config=samples/04.0-file-transfer/provider/config.properties -jar samples/04.0-file-transfer/provider/build/libs/provider.jar > log.txt &
          sleep 5
          grep "INFO.*edc-.*ready" log.txt
          rm log.txt
          killall java

      - name: Check Sample 04.2 (Command-Q/Watchdog)
        run: |
          echo "Checking Sample 04.2 - Command-Q/Watchdog"
          ./gradlew :samples:04.2-modify-transferprocess:consumer:shadowJar
          java -Dedc.fs.config=samples/04.2-modify-transferprocess/consumer/config.properties -jar samples/04.2-modify-transferprocess/consumer/build/libs/consumer.jar > log.txt &
          sleep 5
          grep "INFO.*edc-.*ready" log.txt
          rm log.txt
          killall java

      # we cannot check sample 5 currently because we'd need repo secrets for that (client id,...)


  Helm-Chart:
    runs-on: ubuntu-latest
    name: Test Helm chart in minikube
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          # Do not use cache, as it would cause the test not to run on cache hit

      - name: Install and start minikube
        run: |
          curl -fLo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          ./minikube start --wait all

      - name: Build JARs
        run: ./gradlew system-tests:runtimes:file-transfer-consumer:shadowJar system-tests:runtimes:file-transfer-provider:shadowJar --no-daemon

      - name: Test
        run: |
          eval $(minikube -p minikube docker-env)
          chmod +x system-tests/minikube/minikube-test.sh
          system-tests/minikube/minikube-test.sh

      - name: Kubernetes logs
        if: always()
        run: |
          set -x
          kubectl get pods
          kubectl logs deployment/provider-dataspace-connector --tail=200
          kubectl logs deployment/consumer-dataspace-connector --tail=200
